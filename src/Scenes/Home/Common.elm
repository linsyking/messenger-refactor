module Scenes.Home.Common exposing (Model, nullModel, initModel)

{-| Common module

This module is generated by Messenger, don't modify this.

@docs Model, nullModel, initModel

-}

import Lib.Env.Env exposing (Env)
import Lib.Scene.Base exposing (LayerPacker, SceneInitData(..))
import Scenes.Home.AllLayers exposing (allLayers)
import Scenes.Home.LayerBase exposing (CommonData, nullCommonData)
import Scenes.Home.LayerSettings exposing (LayerT)
import Scenes.Home.SceneInit exposing (initCommonData, nullHomeInit)


{-| Model
-}
type alias Model =
    LayerPacker CommonData LayerT


{-| nullModel
-}
nullModel : Model
nullModel =
    { commonData = nullCommonData
    , layers = []
    }


{-| Initialize the model
-}
initModel : Env () -> SceneInitData -> Model
initModel env init =
    let
        layerInitData =
            case init of
                HomeInitData x ->
                    x

                _ ->
                    nullHomeInit
    in
    { commonData = initCommonData env layerInitData
    , layers = allLayers env layerInitData
    }
