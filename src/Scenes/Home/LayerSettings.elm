module Scenes.Home.LayerSettings exposing
    ( LayerT
    , LayerList, addAbsLayer, addLayer, addUserLayer
    )

{-| This module is generated by Messenger, don't modify this.

@docs LayerDataType
@docs LayerT

-}

import Lib.Env.Env as Env
import Lib.Layer.Base exposing (AbsLayer, GeneralLayer, Layer)
import Messenger.GeneralModel exposing (abstract)
import Scenes.Home.LayerBase exposing (CommonData, nullCommonData)
import Scenes.Home.SceneInit exposing (HomeInit)
import Scenes.Home.UserLayers exposing (UserLayerTr, genLayer)


{-| LayerT
-}
type alias LayerT =
    AbsLayer CommonData


type alias LayerList =
    Env.Env () -> HomeInit -> List (AbsLayer CommonData)


addAbsLayer : (Env.Env CommonData -> HomeInit -> AbsLayer CommonData) -> LayerList -> LayerList
addAbsLayer initAbsLayer ls env layerInitData =
    initAbsLayer (Env.addCommonData nullCommonData env) layerInitData :: ls env layerInitData


addLayer : (Env.Env CommonData -> HomeInit -> Layer a CommonData) -> LayerList -> LayerList
addLayer initLayer =
    addAbsLayer (\e h -> abstract (initLayer e h))


addUserLayer : (Env.Env CommonData -> HomeInit -> GeneralLayer a CommonData c) -> UserLayerTr c -> LayerList -> LayerList
addUserLayer initUserLayer usi =
    addAbsLayer (\e h -> genLayer (initUserLayer e h) usi)
